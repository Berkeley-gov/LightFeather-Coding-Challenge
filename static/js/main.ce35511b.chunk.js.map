{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/DropdownMenu.js","components/NotificationForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","type","id","tabIndex","placeholder","Component","Footer","href","DropdownMenu","props","useState","supervisors","setSupervisors","useEffect","axios","get","then","response","data","error","console","log","supervisorSorted","sort","a","b","lastName","localeCompare","filter","supervisor","isNaN","jurisdiction","onClick","e","target","value","selectedSupervisor","handleSupervisor","map","JSON","stringify","firstName","NotificationForm","onChangeFirstName","setState","onChangeLastName","onChangeEmail","email","onChangePhoneNumber","phoneNumber","parse","onSubmit","preventDefault","state","employee","post","catch","bind","style","margin","this","width","name","onChange","autoComplete","required","pattern","marginLeft","paddingTop","App","listOfSupervisors","path","exact","component","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce35511b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Navbar class component renders in a user friendly navigation bar that has access to all other components\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark  bg-dark\">\n                <div className=\"container-fluid text-center\">\n                    <Link to=\"/\" className=\"navbar-brand\">LightFeather.io</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\" aria-label=\" Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/users/add\" className=\"nav-link active\" tabIndex=\"-1\"\n                                      aria-disabled=\"true\">Create Account</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/login\" className=\"nav-link active\" tabIndex=\"-1\"\n                                      aria-disabled=\"true\">Login</Link>\n                            </li>\n                        </ul>\n                        <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\"\n                                   aria-label=\"Search\"/>\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                        </form>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Footer class component renders a navigational footer bar to the home page. Contains access to my portfolio.\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer mt-auto py-3 bg-dark shadow-lg\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" aria-label=\"Tenth navbar example\">\n                    <div className=\"container-fluid\">\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarsExample08\" aria-controls=\"navbarsExample08\"\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample08\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link active\" aria-current=\"page\" href=\"https://berkeley-gov.github.io/myportfolio.github.io/\">Juan's portfolio</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/login\" className=\"nav-link\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Login</Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </footer>\n        );\n    }\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function DropdownMenu(props){\n\n    const [supervisors, setSupervisors] = useState([]);\n\n    useEffect(function() {\n        axios.get(\"https://609aae2c0f5a13001721bb02.mockapi.io/lightfeather/managers\")\n        .then(response => setSupervisors(response.data))\n        .then(error => console.log(error))\n    }, []);\n\n    const sortingAlgorithm =  function (a, b) { return a.lastName.localeCompare(b.lastName)}\n\n    const supervisorSortedNames = supervisors.sort(sortingAlgorithm);\n\n    const supervisorSortedJurisdiction = supervisorSortedNames.filter(function(supervisor) {\n        return isNaN(supervisor.jurisdiction);\n    })\n\n    const supervisorSorted = supervisorSortedJurisdiction.sort((a, b) => {return a.jurisdiction.localeCompare(b.jurisdiction)})\n\n    function onChangeSupervisor(e) {\n        console.log(e.target.value)\n        const selectedSupervisor = e.target.value;\n        props.handleSupervisor(selectedSupervisor);\n    }\n\n    \n\n    return(\n        <select className=\"form-control col-sm-2\" onClick={onChangeSupervisor}>\n            <option value=\"0\">--Select a supervisor--</option>\n            {\n                supervisorSorted.map((supervisor) => \n                <option key={supervisor.id} value={JSON.stringify(supervisor)}>Jurisdiction: {supervisor.jurisdiction} -- {supervisor.lastName}, {supervisor.firstName}</option>\n                )\n            }\n        </select>\n    );\n\n} ","import { Component } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport DropdownMenu from './DropdownMenu';\n\n// UserSignUp class component allows a user to sign up for an account.\nexport default class NotificationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        // State is set with all the necessary information needed to make an account for the user.\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phoneNumber: '',\n            selectedSupervisor: {}\n        };\n\n        // Binds all the \"this\" keywords to the appropriate method that is invoking it\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n        this.handleSupervisor = this.handleSupervisor.bind(this);\n    }\n\n    // Sets the username.\n    onChangeFirstName = (e) => {\n        this.setState({ firstName: e.target.value });\n    }\n\n\n    // Sets the password.\n    onChangeLastName = (e) => {\n        this.setState({ lastName: e.target.value });\n    }\n\n    // Sets the email\n    onChangeEmail = (e) => {\n        this.setState({ email: e.target.value });\n    }\n\n\n    // Sets the phone number\n    onChangePhoneNumber = (e) => {\n        this.setState({ phoneNumber: e.target.value });\n    }\n\n\n    // Sets the employee's supervisor\n    handleSupervisor = (data) => {\n        this.setState({ selectedSupervisor: JSON.parse(data) });\n    }\n\n\n    // Handler function that controls the functionality of the form's submission.\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        console.log(this.state.selectedSupervisor)\n\n        const supervisor = this.state.selectedSupervisor;\n        \n\n        // Creating a user object on form submit and initializing all variables for it.\n        const employee = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            phoneNumber: this.state.phoneNumber,\n            supervisor: {\n                firstName: supervisor.firstName,\n                lastName: supervisor.lastName\n            }\n        };\n\n        console.log(employee);\n\n        // IMPORTANT NOTE: Front end server uses the port number 3000, not 5000 like the backend port number.\n\n        // HTTP POST REQUEST: post request made to backend BMI API so user's new account is added to the database.\n        axios.post('http://localhost:8080/api/submit', employee)\n            .then(response => console.log(response))\n            .catch(error => console.log('+ Failed to make the axios post request to add user to the database: ' + error));\n\n        // Takes the user back to the login component.\n        // this.props.history.push('/login');\n    }\n\n\n    render() {\n        return (\n            <div className=\"row-fluid bg-body\" style={{ margin: '200px auto'}}>\n                <div className=\"col-sm-4 mx-auto\">\n                    <form className=\"card shadow-lg\" onSubmit={this.onSubmit} style={{ width: '100%'}}>\n                        <h2 className=\"card-header text-center bg-dark text-white\">Create Account</h2>\n                        <div className=\"form-group row p-4\">\n                            <div className=\"form-group col-md-6\">\n                                <label className=\"fs-5 pb-2\" >First Name </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"first_name\"\n                                    id=\"first_name\"\n                                    value={this.state.firstName}\n                                    className=\"form-control\"\n                                    onChange={this.onChangeFirstName}\n                                    autoComplete=\"on\"\n                                    required />\n                            </div>\n\n                            <div className=\"form-group col-md-6\">\n                                <label className=\"fs-5 pb-2\">Last Name: </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"last_name\"\n                                    id=\"last_name\"\n                                    className=\"{styles.input} form-control\"\n                                    value={this.state.lastName}\n                                    onChange={this.onChangeLastName}\n                                    autoComplete=\"on\"\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row p-4\">\n                            <div className=\"form-group col-md-6\">\n                                <label className=\"fs-5 pb-2\">Email: </label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    className=\"{styles.input} form-control\"\n                                    value={this.state.email}\n                                    onChange={this.onChangeEmail}\n                                    autoComplete=\"on\"\n                                />\n                            </div>\n\n                            <div className=\"form-group col-md-6\">\n                                <label className=\"fs-5 pb-2\">Phone number: </label>\n                                <input\n                                    type=\"tel\"\n                                    name=\"phone\"\n                                    id=\"phone\"\n                                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                    className=\"{styles.input} form-control\"\n                                    value={this.state.phoneNumber}\n                                    onChange={this.onChangePhoneNumber}\n                                    autoComplete=\"on\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group col-md-5\" style={{marginLeft: 25, paddingTop: 20}}>\n                            <DropdownMenu handleSupervisor={this.handleSupervisor} selectedSupervisor={this.state.selectedSupervisor}/>\n                        </div>\n\n                        <div className=\"form-group pt-4 pb-4\">\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" style={{marginLeft: '30px'}} />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NotificationForm from './components/NotificationForm';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // App component will have control of one state which will be the an entire list called from mock API. \n    this.state = {\n      listOfSupervisors: []\n    }\n  }\n\n  // Before mounting and initializing the App component, all supervisors are retrieved from the Mock API.\n  componentDidMount() {\n    // HTTP AXIOS GET REQUEST: retrieves all supervisors from the database sets to the state of App.\n    axios.get('https://609aae2c0f5a13001721bb02.mockapi.io/lightfeather/managers')\n    .then(response => {\n      this.setState({ listOfSupervisors : response.data})\n      console.log(this.state.listOfSupervisors);\n    })\n    .catch(error => {\n      console.log('\\n> Failed to retrieve the list of supervisors from the Mock API.');\n      console.log(error);\n    });\n  }  \n\n  render() {\n    return(\n      <Router>\n         <Navbar />\n         <Route path=\"/\" exact={true} component={NotificationForm} />\n         <Footer />\n      </Router>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}